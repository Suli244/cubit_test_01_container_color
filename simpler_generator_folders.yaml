

# **************************************************************************
# * ArchitectureGenerator - Simpler FLutter Generator -
# **************************************************************************

#? --> For Info
# showInputBox replacing 
# For Example:
#
#---> NAME
#
#   - writing "settings" to showInputBox
#
#   - before -> settings
#        - NAME_page.dart
#        - NAME_bloc.dart
#        - NAME_repository.dart
#
#   - after -> 
#        - settings_page.dart
#        - settings_bloc.dart
#        - settings_repository.dart
#
#---> funcCase
#
#   - writing "get_test" to showInputBox
#   - before -> get_test
#        Future<void> funcCase()
#
#   - after -> 
#        Future<void> getTest()
#
#
#
#
#---> LOWER_CASE
#
#   - before -> pay_login
#       - part 'LOWER_CASE_model.freezed.dart';
#       - part 'LOWER_CASE_model.g.dart';
#
#   - after ->
#       - part 'pay_login_model.freezed.dart';
#       - part 'pay_login_model.g.dart';
# 
# 
#---> to use Custom Dart Code
#   - should paste to false
#       - dataSource
#       - dataModels
#       - dataRepository
#       - entityModels
#       - domainRepository
#       - usecase
#       - stateWidget
# 

# ********************* Created Extension For Fun ðŸ˜œ ************************


dataSource: false

dataModel: false

dataRepository: false

entityModel: false

domainRepository: false

usecase: false

blocType: equatable
#* equatable
#* simpleBloc
#* freezedBloc
#* Empty

stateWidget: StateFullWidget
#* StateFullWidget
#* StateLessWidget
#* Empty

# ----M.V.P-------------------------------------------------------> start
generate:
# ---Data------------------------------------------------------
  - category: data
    contents:
      - folder: data_source
        contents:
          - file: NAME_local_data_source.dart
          - file: NAME_remote_data_source.dart
      - folder: models
        contents:
          - file: NAME_model.dart
      - folder: repositories
        contents:
          - file: NAME_repository_impl.dart
# ---Domain----------------------------------------------------          
  - category: domain
    contents:
      - folder: entities
        contents:
          - file: NAME_entity.dart
            code: | 
              class NAMEEntity {}
      - folder: repositories
        contents:
          - file: NAME_repository.dart
            code: | 
              class NAMERepository {}
      - folder: usecase
        contents:
          - file: NAME_usecase.dart
            code: | 
              class NAMEUseCase {}
# ---Presentation----------------------------------------------
  - category: presentation
    contents:
      - folder: widgets
      - folder: bloc
        contents:
          - file: NAME_bloc.dart
          - file: NAME_event.dart
          - file: NAME_state.dart
      - folder: pages
        contents:
          - file: NAME_page.dart
            code: |
              import 'package:flutter/material.dart';

              void main() {
                runApp(MyApp());
              }

              class MyApp extends StatelessWidget {
                @override
                Widget build(BuildContext context) {
                  return MaterialApp(
                    home: Scaffold(
                      appBar: AppBar(
                        title: Text('My App'),
                      ),
                      body: Center(
                        child: Text('Hello, World!'),
                      ),
                    ),
                  );
                }
              }



# ------------------------------------------------------------- end

